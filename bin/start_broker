#!/bin/bash

# Start the main MCP broker with distributed support
cd "$(dirname "$0")/.." || exit

# Config path handling (now supports XDG paths)
if [ -n "$MCP_CONFIG_PATH" ]; then
    echo "Starting MCP Broker with config: $MCP_CONFIG_PATH"
else
    echo "Starting MCP Broker with XDG config path (default: ~/.config/mcp_broker/config.json)"
fi
echo "Broker will be available as distributed node: mcp_broker@localhost"

# Check for JWT keys
if [ ! -f "config/jwt_keys/private_key.pem" ] || [ ! -f "config/jwt_keys/public_key.pem" ]; then
    echo "Warning: JWT keys not found. Generating new RSA key pair..."
    mkdir -p config/jwt_keys
    openssl genrsa -out config/jwt_keys/private_key.pem 2048
    openssl rsa -in config/jwt_keys/private_key.pem -pubout -out config/jwt_keys/public_key.pem
    echo "Generated JWT keys in config/jwt_keys/"
    echo "Use bin/generate_jwt to create client tokens"
else
    echo "Using existing JWT keys from config/jwt_keys/"
fi

# Start epmd if not running (needed for distributed Erlang)
if ! pgrep -f epmd > /dev/null; then
    echo "Starting epmd (Erlang Port Mapper Daemon)..."
    epmd -daemon
fi

# Start the main broker application
exec mix run --no-halt
